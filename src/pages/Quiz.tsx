import { useState } from 'react'
const qs=[['Tu prÃ©fÃ¨res...',['RÃ©seaux industriels & cybersÃ©curitÃ©:RESET','FiabilitÃ© & maintenance prÃ©dictive:SMS','Optimisation des flux de production:COMETES']],['Ton terrain de jeu favori ?',['SystÃ¨mes temps rÃ©el / embarquÃ©s:RESET','Analyse de dÃ©faillances / RAMS:SMS','Lean, qualitÃ©, supply chain:COMETES']],['Projet de fin dâ€™Ã©tudes idÃ©al',['Supervision Ã©nergie & IoT:RESET','Plan de maintenance 4.0:SMS','Simulation de ligne & amÃ©lioration continue:COMETES']],['Tu te vois...',['Architecte rÃ©seaux:RESET','IngÃ©nieur fiabilitÃ©:SMS','IngÃ©nieur mÃ©thodes:COMETES']],['Tu aimes surtout...',['Protocoles, RF, traitement du signal:RESET','AMDEC, HAZOP, arbres de dÃ©faillances:SMS','VSM, Six Sigma, mÃ©trologie:COMETES']],['Milieu prÃ©fÃ©rÃ©',['TÃ©lÃ©com/Ã©nergie/OT:RESET','AÃ©ronautique/dÃ©fense/transport:SMS','Industrie/manufacturing/logistique:COMETES']],['Motivation clÃ©',['Connecter & sÃ©curiser:RESET','Fiabiliser & protÃ©ger:SMS','Optimiser & amÃ©liorer:COMETES']],['Logiciels qui te parlent',['MATLAB/Simulink, SCADA:RESET','Reliability Workbench, RAM Commander:SMS','Arena, AnyLogic, Minitab:COMETES']],['Cours prÃ©fÃ©rÃ©',['Signaux & rÃ©seaux:RESET','SÃ»retÃ© de fonctionnement:SMS','QualitÃ© & production:COMETES']],['Type de poste visÃ©',['IngÃ©nieur rÃ©seaux / OT:RESET','IngÃ©nieur RAMS / maintenance:SMS','IngÃ©nieur mÃ©thodes / industrialisation:COMETES']]] as const
export default function Quiz(){const [i,setI]=useState(0);const [s,setS]=useState({SMS:0,RESET:0,COMETES:0});const done=i>=qs.length;function pick(x:string){const tr=x.split(':')[1];setS(v=>({...v,[tr]:v[tr as keyof typeof v]+1}));setI(i+1);}if(done){const w=Object.entries(s).sort((a,b)=>b[1]-a[1])[0][0];return(<section className='container py-12'><h1 className='section-title'>Votre rÃ©sultat</h1><div className='card mt-4'><div className='card-content'><p>ðŸŽ¯ Parcours recommandÃ© : <b>{w}</b></p><div className='mt-2 text-sm opacity-80'>Scores â€” SMS: {s.SMS} | RESET: {s.RESET} | COMETES: {s.COMETES}</div><div className='mt-4 flex gap-3'><a className='btn btn-primary' href={'/parcours/'+w.toLowerCase()}>Voir le parcours</a><a className='btn' href='/admissions'>Candidater</a></div></div></div></section>)}const q=qs[i];return(<section className='container py-12'><h1 className='section-title mb-2'>Quiz dâ€™orientation</h1><p className='muted mb-4'>Question {i+1} sur {qs.length}</p><div className='card'><div className='card-content'><div className='text-lg font-semibold'>{q[0]}</div><div className='mt-4 grid md:grid-cols-3 gap-3'>{q[1].map((a,idx)=>(<button key={idx} className='btn' onClick={()=>pick(a)}>{a.split(':')[0]}</button>))}</div></div></div></section>)}
